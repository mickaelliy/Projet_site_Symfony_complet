# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    #encoders sert à encoder le mdp, ici plaintext laisse le mdp en clair, pour securiser mettre sha512
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Mickweb\UserBundle\Entity\User: sha512 #pour crypter le mdp

    #role_hierarchy permet d'assigner des roles pour controler les accès
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        #in_memory:
            #memory:
                #users:
                  #user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                  #admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ]}
        main:
            id: fos_user.user_provider.username
            #entity:
                #class:    Mickweb\UserBundle\Entity\User
                #property: username

    firewalls:
        # mise en place d'un pare feu
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # pare-feu uniquement pour le formulaire
        main_login:
            # expression regulière qui permet de prendre /login (mais pas login_check)
            pattern:   ^/login$
            anonymous: true # On autorise alors les anonymes sur ce pare-feu
        # main est le nom du pare feu
        main:
            pattern:        ^/ #masque d'url. protege toutes les pages par un pare-feu
            anonymous:      true # FALSE n'accepte pas les utilisateurs anonymes. Mettre TRUE pour les accepter
            provider: main
            # methode d'authentification du pare feu via un formulaire
            form_login:
                login_path: fos_user_security_login # route de connexion du form
                check_path: fos_user_security_check # route de validation du form
            logout:
                path:       fos_user_security_logout # nom de la route pour etre deconnecté
                target:     fos_user_security_login # nom de la route après deconnexion
            remember_me:
                secret:   %secret%
    
    # permet de sécuriser toutes les pages dont l'URL commence par /admin
    #access_control:
        #- { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~
